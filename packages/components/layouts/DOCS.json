{
  "Box": {},
  "Flex": {
    "align": {
      "type": "\"center\" | (string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"stretch\" | \"end\" | \"flex-end\" | \"flex-start\" | \"start\" | \"normal\" | \"self-end\" | ... 6 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `align-items` property."
    },
    "basis": {
      "type": "number | \"content\" | (string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | \"-moz-fit-content\" | ... 8 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-basis` property."
    },
    "direction": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"column-reverse\" | \"row\" | \"row-reverse\" | ResponsiveObject<FlexDirection> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-direction` property."
    },
    "grow": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (number & {}) | ResponsiveObject<FlexGrow> | ColorModeArray<FlexGrow> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-grow` property."
    },
    "justify": {
      "type": "\"center\" | \"right\" | \"left\" | (string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"space-around\" | \"space-between\" | \"space-evenly\" | ... 10 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `justify-content` property."
    },
    "shrink": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (number & {}) | ResponsiveObject<FlexShrink> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-shrink` property."
    },
    "wrap": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"nowrap\" | \"wrap\" | \"wrap-reverse\" | ResponsiveObject<FlexWrap> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-wrap` property."
    }
  },
  "Center": {},
  "Grid": {
    "duration": {
      "type": "string | number",
      "defaultValue": "'1s'",
      "required": false,
      "description": "The CSS `dur` property."
    },
    "size": {
      "type": "UIValue<number | \"small\" | (string & {}) | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"large\" | \"medium\" | \"x-large\" | ... 14 more ... | \"9xl\">",
      "required": false,
      "description": "The CSS `font-size` property."
    }
  },
  "GridItem": {
    "area": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | ResponsiveObject<GridArea> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-area` property."
    },
    "colEnd": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | ResponsiveObject<GridColumnEnd> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-column-end` property."
    },
    "colSpan": {
      "type": "UIValue<number>",
      "required": false,
      "description": "The number of columns the grid item should `span`."
    },
    "colStart": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | ResponsiveObject<GridColumnStart> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-column-start` property."
    },
    "rowEnd": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | ResponsiveObject<GridRowEnd> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-row-end` property."
    },
    "rowSpan": {
      "type": "UIValue<number>",
      "required": false,
      "description": "The number of rows the grid item should `span`."
    },
    "rowStart": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | ResponsiveObject<GridRowStart> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-row-start` property."
    }
  },
  "Container": {
    "centerContent": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, container will center its children regardless of their width."
    }
  },
  "Stack": {
    "align": {
      "type": "\"center\" | (string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"stretch\" | \"end\" | \"flex-end\" | \"flex-start\" | \"start\" | \"normal\" | \"self-end\" | ... 6 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `align-items` property."
    },
    "direction": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"column-reverse\" | \"row\" | \"row-reverse\" | ResponsiveObject<FlexDirection> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-direction` property."
    },
    "divider": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "If `true`, each stack item will show a divider."
    },
    "justify": {
      "type": "\"center\" | \"right\" | \"left\" | (string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"space-around\" | \"space-between\" | \"space-evenly\" | ... 10 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `justify-content` property."
    },
    "wrap": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"nowrap\" | \"wrap\" | \"wrap-reverse\" | ResponsiveObject<FlexWrap> | ColorModeArray<...> | ResponsiveObject<...> | ColorModeArray<...> | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-wrap` property."
    }
  },
  "Spacer": {},
  "Divider": {
    "colorScheme": {
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"indigo\" | \"violet\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "orientation": {
      "type": "\"horizontal\" | \"vertical\"",
      "defaultValue": "'horizontal'",
      "required": false,
      "description": "The orientation of the divider."
    },
    "size": {
      "type": "string",
      "required": false,
      "description": "The size of the Divider."
    },
    "variant": {
      "defaultValue": "solid",
      "type": "\"solid\" | \"dashed\" | \"dotted\"",
      "required": false,
      "description": "The variant of the Divider."
    }
  },
  "AspectRatio": {
    "ratio": {
      "type": "UIValue<number>",
      "defaultValue": "'4 / 3'",
      "required": false,
      "description": "The aspect ratio of the Box."
    }
  }
}
